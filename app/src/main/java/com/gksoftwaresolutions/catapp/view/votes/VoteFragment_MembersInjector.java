// Generated by Dagger (https://dagger.dev).
package com.gksoftwaresolutions.catapp.view.votes;

import com.gksoftwaresolutions.catapp.viewModel.VoteViewModel;
import dagger.MembersInjector;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class VoteFragment_MembersInjector implements MembersInjector<VoteFragment> {
  private final Provider<VoteViewModel> mViewModelProvider;

  public VoteFragment_MembersInjector(Provider<VoteViewModel> mViewModelProvider) {
    this.mViewModelProvider = mViewModelProvider;
  }

  public static MembersInjector<VoteFragment> create(Provider<VoteViewModel> mViewModelProvider) {
    return new VoteFragment_MembersInjector(mViewModelProvider);
  }

  @Override
  public void injectMembers(VoteFragment instance) {
    injectMViewModel(instance, mViewModelProvider.get());
  }

  @InjectedFieldSignature("com.gksoftwaresolutions.catapp.view.votes.VoteFragment.mViewModel")
  public static void injectMViewModel(VoteFragment instance, VoteViewModel mViewModel) {
    instance.mViewModel = mViewModel;
  }
}
